{"version":3,"sources":["components/NavBar.tsx","App.tsx","Pages/HomePage.tsx","api/api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/Loader/Loader.tsx","Pages/PeoplePage.tsx","utils/getPeopleWithParent.tsx","Pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["NavBar","getLinkClass","isActive","classNames","className","role","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","Loader","PeoplePage","useState","setPeople","processing","setProcessing","error","setError","useEffect","fetchedPeople","find","p","getPeopleWithParent","catch","finally","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2e9f4c50.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const NavBar: React.FC = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => (\n    classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    }));\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={getLinkClass} to=\"/people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from '../types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then((response) => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person: { slug, sex, name },\n}) => {\n  return (\n    <td>\n      <Link\n        to={`/people/${slug}`}\n        className={classNames({\n          'has-text-danger': sex === 'f',\n        })}\n      >\n        {name}\n      </Link>\n    </td>\n  );\n};\n","import { useParams } from 'react-router-dom';\n// import { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': slug === person.slug,\n            })}\n          >\n            <PersonLink person={person} />\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            {person.mother\n              ? <PersonLink person={person.mother} />\n              : (<td>{person.motherName || '-'}</td>)}\n\n            {person.father\n              ? <PersonLink person={person.father} />\n              : (<td>{person.fatherName || '-'}</td>)}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useState, useEffect } from 'react';\nimport { getPeople } from '../api/api';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Loader } from '../components/Loader';\nimport { getPeopleWithParent } from '../utils/getPeopleWithParent';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setProcessing(true);\n    setError(false);\n\n    getPeople()\n      .then((fetchedPeople) => {\n        setPeople(getPeopleWithParent(fetchedPeople));\n      })\n      .catch(() => setError(true))\n      .finally(() => setProcessing(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {processing && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!processing && !people.length && !error && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {!processing && people.length && !error && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const getPeopleWithParent = (people: Person[]) => {\n  return people.map((person) => {\n    const mother = people.find((p) => p.name === person.motherName);\n    const father = people.find((p) => p.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}